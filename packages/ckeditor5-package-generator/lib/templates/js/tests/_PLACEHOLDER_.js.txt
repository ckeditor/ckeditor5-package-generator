import Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';
import Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';
import Heading from '@ckeditor/ckeditor5-heading/src/heading';
import ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';
import <%= packageName.pascalCase %> from '../src/<%= packageName.lowerCase %>';

/* global document */

describe( '<%= packageName.pascalCase %>', () => {
	it( 'should be named', () => {
		expect( <%= packageName.pascalCase %>.pluginName ).to.equal( '<%= packageName.pascalCase %>' );
	} );

	describe( 'init()', () => {
		let domElement, editor;

		beforeEach( async () => {
			domElement = document.createElement( 'div' );
			document.body.appendChild( domElement );

			editor = await ClassicEditor.create( domElement, {
				plugins: [
					Paragraph,
					Heading,
					Essentials,
					<%= packageName.pascalCase %>
				],
				toolbar: [
					'<%= packageName.camelCase %>Button'
				]
			} );
		} );

		afterEach( () => {
			domElement.remove();
			return editor.destroy();
		} );

		it( 'should load <%= packageName.pascalCase %>', () => {
			const myPlugin = editor.plugins.get( '<%= packageName.pascalCase %>' );

			expect( myPlugin ).to.be.an.instanceof( <%= packageName.pascalCase %> );
		} );

		it( 'should add an icon to the toolbar', () => {
			expect( editor.ui.componentFactory.has( '<%= packageName.camelCase %>Button' ) ).to.equal( true );
		} );

		it( 'should add a text into the editor after clicking the icon', () => {
			const icon = editor.ui.componentFactory.create( '<%= packageName.camelCase %>Button' );

			expect( editor.getData() ).to.equal( '' );

			icon.fire( 'execute' );

			expect( editor.getData() ).to.equal( '<p>Hello CKEditor 5!</p>' );
		} );
	} );
} );
